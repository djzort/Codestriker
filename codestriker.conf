# -*-perl-*-
# Configuration file for codestriker.pl.

# Location of where to store the code review data.  Make sure the
# permissions are set appropriately.  If running apache, make sure the
# following directory is writable to the user running httpd (usually
# "nobody" or "apache").  Each topic is stored in its own sub-directory,
# whose name is just a random bunch of digits.

# Database to use for storing codestriker data.  Examples given are Postgresql
# and MySQL
$db = "DBI:Pg:dbname=codestrikerdb";
#$db = "DBI:mysql:dbname=codestrikerdb";

# Database user.
$dbuser = "codestriker";

# Database password.
$dbpasswd = "";
#$dbpasswd = "cspasswd";

# Location of the mailing host.  This is used when sending out codestriker
# comments.
$mailhost = "localhost";

# Indicate whether to try and compress output if the client browser
# supports it.  This can make a tremdous difference in bandwidth,
# especially over slow links.
$use_compression = 0;

# Location of gzip.  Gzip is used only if you don't have Compress::Zlib
# installed.  Note, if running with mod_perl, you _must_ have Compress:Zlib
# installed.  If gzip is not available, this can be set to "".
$gzip = "/bin/gzip";

# Location of the cvs binary.
$cvs = "/usr/bin/cvs";

# If codestriker is installed differently to that described in the README file
# (for example on the sourceforge servers), it may be necessary to explicitly
# specify the location of the codestriker_css as a URL.
$codestriker_css = "";

# The URL to the bug tracking system.  The bug number is appended to the
# end of this string when URLs are generated.  This can be left blank if
# there is no need for bug-tracking integration.
$bugtracker = "";
#$bugtracker = "http://localhost.localdomain/show_bug.cgi?id=";

# Valid repositories which may be selected at the create topic screen.
# The order shown here is the order presented in the option list.  The
# first example is the CVSROOT of a CVS repository on the same machine
# as the codestriker server.  The second is an example of a CVS
# repository which contains the URL to a viewcvs installation (CVS web
# is also supported), followed by the CVSROOT of the repository.  The
# last example is the syntax used for specifying a Subversion repository.
@valid_repositories =
    (
     "/home/sits/cvs",
     "http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi /cvsroot",
     "svn:http://svn.collab.net/repos/svn/trunk"
    );

# A mapping of repositories to filename viewers.  Examples of such systems
# would be CVSweb and ViewCVS, for local repositories.  Mappings are
# not required for remote CVSweb and ViewCVS repositories, as they are
# viewers themselves.  When viewing reviews, links from filenames will be
# mapped to these URLs, to obtain revision log information for that file.
$file_viewer =
{
    "/home/sits/cvs" => "http://localhost/cgi-bin/cvsweb.cgi"
};

# The default viewing mode to use in the URL when creating a topic.  Can
# be either ($NORMAL_MODE, $COLOURED_MODE or $COLOURED_MONO_MODE).  These
# values should not be changed.
$NORMAL_MODE = 0;
$COLOURED_MODE = 1;
$COLOURED_MONO_MODE = 2;

$default_topic_create_mode = $COLOURED_MODE;

# List of valid topic states.  Note these values are mapped to the database
# depending on their position in the list.  ie, Open -> 0, Closed -> 1, etc.
# There is no problem added new states dynamically, or changing the textual
# names.  Note, the initial topic state must be the first element.  Unless
# you know what you are doing, these should be left unchanged.
@topic_states = ("Open", "Closed", "Committed");

# Indicate if topics can be deleted.  Turning this to false can be useful for
# "anonymous" installations of codestriker.
$allow_delete = 1;

# Indicate if topics can be listed/searched.  Turning this to false can be
# useful for "anonymous" installations of codestiker.
$allow_searchlist = 1;

# Indicate if the repository attribute can be set to a topic.  If this
# is disabled, it won't be possible to view the entire contents of a
# file before the proposed change and/or after.  On some servers (such
# as sourceforge), the firewall doesn't allow CGI scripts to make
# remote connections.
$allow_repositories = 1;

# If true, don't display any email addresses in their true form, but
# truncate them, to beat SPAM harvesters.
$antispam_email = 0;

# Default width of tabs.  Most developers expect this to be 8, but
# some expect to see 4.  This is also stored in the user's cookie, and
# can be changed dynamically on the view topic screen.
$default_tabwidth = 8;

# Bug database to update.  Currently, only Bugzilla is supported, but it is
# straight-forward to support other bug databases.  To enabled bugzilla, set
# $bug_db to "bugzilla", and set the following parameters to your setup.
$bug_db = "";
#$bug_db = "bugzilla";

# Bug database connection details.
$bug_db_host = "localhost";
$bug_db_name = "bugs";
$bug_db_password = "bugs_password";

# Bugzilla codestriker user id.
$bug_db_user_id = "2";

# LXR database.  Set the variable to the appropriate database to enable
# LXR integration.
$lxr_db = "";
#$lxr_db = "DBI:Pg:dbname=lxr";

# LXR database username and password.
$lxr_user = "lxr";
$lxr_passwd = "";

# The base LXR URL for identifier lookups.
$lxr_idlookup_base_url = "http://localhost.localdomain/lxr/ident?i=";
